"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const nimbus_common_1 = require("@airbnb/nimbus-common");
/**
 * Create a root project config for a project.
 */
function getConfig({ env = {}, esm = false, graphql = false, library = false, next = false, node = false, react = false, typescript = false, }) {
    const envOptions = {
        loose: true,
        modules: esm ? false : 'commonjs',
        shippedProposals: next,
        targets: node ? nimbus_common_1.NODE_TARGET : nimbus_common_1.WEB_TARGET,
        ...env,
    };
    const presets = [['@babel/preset-env', envOptions]];
    const plugins = [
        ['babel-plugin-transform-dev', { evaluate: false }],
    ];
    // Flags
    let useNext = next;
    let removePropTypes = false;
    switch (process.env.NODE_ENV) {
        case 'test': {
            envOptions.modules = 'commonjs';
            envOptions.targets = { node: 'current' };
            plugins.push('babel-plugin-dynamic-import-node');
            break;
        }
        case 'development': {
            if (react) {
                plugins.push('@babel/plugin-transform-react-jsx-source', '@babel/plugin-transform-react-jsx-self');
            }
            break;
        }
        case 'production':
        default: {
            if (!library && react) {
                plugins.push([
                    'babel-plugin-transform-react-remove-prop-types',
                    {
                        mode: 'remove',
                        removeImport: true,
                        additionalLibraries: ['airbnb-prop-types'],
                        ignoreFilenames: ['node_modules'],
                    },
                ]);
                removePropTypes = true;
            }
            break;
        }
    }
    if (graphql) {
        plugins.push('babel-plugin-graphql-tag');
    }
    if (react) {
        presets.push('@babel/preset-react');
    }
    if (typescript) {
        useNext = true;
        presets.push('@babel/preset-typescript');
        if (!removePropTypes) {
            plugins.push('babel-plugin-typescript-to-proptypes');
        }
    }
    if (useNext) {
        plugins.push('@babel/plugin-proposal-class-properties');
    }
    return {
        ignore: [...nimbus_common_1.IGNORE_PATHS, '__tests__', '__mocks__'],
        plugins,
        presets,
    };
}
exports.getConfig = getConfig;
