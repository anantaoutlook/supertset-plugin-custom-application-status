/**
 * @copyright   2017-2019, Miles Johnson
 * @license     https://opensource.org/licenses/MIT
 */
import optimal from './optimal';
import Predicate, { custom, func } from './Predicate';
import ArrayPredicate, { array } from './predicates/Array';
import BooleanPredicate, { bool } from './predicates/Boolean';
import InstancePredicate, { date, instance, predicate, regex } from './predicates/Instance';
import NumberPredicate, { number } from './predicates/Number';
import ObjectPredicate, { blueprint, object } from './predicates/Object';
import ShapePredicate, { shape } from './predicates/Shape';
import StringPredicate, { string } from './predicates/String';
import TuplePredicate, { tuple } from './predicates/Tuple';
import UnionPredicate, { union } from './predicates/Union';
import Schema from './Schema';
export declare const predicates: {
    array: typeof array;
    blueprint: typeof blueprint;
    bool: typeof bool;
    custom: typeof custom;
    date: typeof date;
    func: typeof func;
    instance: typeof instance;
    number: typeof number;
    object: typeof object;
    predicate: typeof predicate;
    regex: typeof regex;
    shape: typeof shape;
    string: typeof string;
    tuple: typeof tuple;
    union: typeof union;
};
export { array, blueprint, bool, custom, date, func, instance, number, object, predicate, regex, shape, string, tuple, union, };
export { ArrayPredicate, BooleanPredicate, InstancePredicate, NumberPredicate, ObjectPredicate, Predicate, Schema, ShapePredicate, StringPredicate, TuplePredicate, UnionPredicate, };
export declare type Predicates = typeof predicates;
export * from './types';
export default optimal;
